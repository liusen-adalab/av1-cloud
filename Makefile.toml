[env]
RUST_LOG = "off"

[config]
default_to_workspace = false
# reduce_output = true
time_summary = false

[tasks.deploy]
script = '''
set -e
set +x

cargo build --release

for i in {15..16}
do
    server=web${i}
    work_dir=/etc/av1-cloud

    # init environment 
    ssh ${server} "mkdir -p ${work_dir}"
    ssh ${server} "systemctl stop av1-cloud || true"

    # sync bin && configs
    scp target/release/av1-cloud ${server}:/usr/bin
    scp -r configs/* ${server}:${work_dir}/configs
    
    # sync service
    scp ./scripts/av1-cloud.service  ${server}:/etc/systemd/system/av1-cloud.service
    ssh ${server} "systemctl daemon-reload"
    ssh ${server} "systemctl enable av1-cloud"
    ssh ${server} "systemctl restart av1-cloud"
done
'''

[tasks.nginx]
script = '''
for i in {13..14}
do
    server=web${i}
    scp scripts/nginx/nginx.conf ${server}:/etc/nginx/
    ssh ${server} "nginx -s reload"
done
'''

[tasks.reset]
script = '''
# stop
for i in {15..16}
do
    server=web${i}
    ssh ${server} "systemctl stop av1-cloud || true"
done

# cache
for i in {70..75}
do 
    redis-cli -c -h 10.0.10.${i} flushall
done

# session 
redis-cli -n 1 -h 10.0.10.59 flushdb

# db
/home/sen/.cargo/bin/diesel database reset --database-url postgres://postgres:postgres@10.0.10.85:5433/av1_cloud

# fs
ssh web15 "rm -rf /storage/dev-av1_cloud-root/"


# restart
for i in {15..16}
do
    server=web${i}
    ssh ${server} "systemctl restart av1-cloud"
done
'''

[tasks.sync]
script = '''
rsync -av --exclude='target' ./ /mnt/c/workspace/av1-cloud/
'''

[tasks.sync.windows]
script = '''
echo win11
wsl rsync -av --exclude='target' ./ /home/sen/code/new-av1-workspace/av1-cloud/
'''

[tasks.pg-reset.windows]
script = '''
wsl /home/sen/.cargo/bin/diesel database reset
'''

[tasks.pg-reset.linux]
script = '''
/home/sen/.cargo/bin/diesel database reset
'''

[tasks.pg-add.windows]
script_runner = "@shell"
script = '''
wsl /home/sen/.cargo/bin/diesel migration generate ${@}
'''

##############################
[tasks.d]
alias = "deploy"

[tasks.n]
alias = "nginx"
